#!/bin/sh

dns_name() {
	[[ -z "${dns+x}" ]] && read -p "${SERVER_URL_PROMPT}" dns
	[[ -n "${only_outputs_mac}" ]] && tput sgr0 # can't place _RESET here due to last 'read' command. Help?
	#tput sgr0 # can't place _RESET here due to last 'read' command. Help?
	[[ "${dns}" = "" ]] && unset dns && display_empty_dns && dns_name
	name=$(echo "${dns}" | sed "s/\/$// ; s/http:\/\/// ; s/:// ; s/\///g")
	if ! inspect_dns "${dns}" "from_interactive"; then
		unset dns
		dns_name
	fi
}


inspect_dns() {
	mode=$2
	# Check if DNS is well formed URL or IP
	#if ! [[ $(echo "${1}" | grep -Eo '((https?|ftp)://)?(.*:.*@)?([-a-zA-Z0-9]+\.)?[-a-zA-Z0-9]+\.[-a-zA-Z0-9]+((:)[0-9]{1,5})?(/.*)?') == "${1}" ||
	URL_protocol="((https?|ftp)://)?"
	URL_user_information="(.*:.*@)?"
	URL_host="([-a-zA-Z0-9]+\.)?{1,2}[-a-zA-Z0-9]+\.[a-zA-Z0-9]{2,6}"
	URL_IP="([0-9]{1,3}\.){3}[0-9]{1,3}"
	URL_host_or_IP="($URL_host|$URL_IP)"
	URL_port="(:[0-9]{1,5})?"
	URL_path="(/([-_a-zA-Z0-9]+(/)?)?*)?"
	URL_query_string="(\?.*)?"
	URL_regexp=$(echo ${URL_protocol}${URL_user_information}${URL_host_or_IP}${URL_port}${URL_path}${URL_query_string})
	if ! [[ $(echo "${1}" | grep -Eo "$URL_regexp") == "${1}" ]]; then
		display_bad_dns
		if [[ "${mode}" == "from_args" ]]; then
			exit 1
		else
			return 1
		fi
	elif [[ $(echo "${1}" | sed 's/\ //g') == "" ]]; then
		display_empty_dns "${mode}"
		if [[ "${mode}" == "from_args" ]]; then
			exit 1
		else
			return 1
		fi
	fi
}
